import "Sensor.thingml"
import "Pump.thingml"
import "_Datatypes.thingml"

/* Esse arquivo ainda nÃ£o foi testado.
 * This file has not yet been tested.
 */

thing PumpSystem includes TimerMsgs, SensorMsgs, PumpMsgs { 
	// Sensor ports
	
	/*required port clock {
		receives ms1000_tic
	}*/
	
	required port sbcb {
		receives read_value
	}
	
	required port sbca {
		receives read_value
	}
	
	required port sacb {
		receives read_value
	}
	
	required port saca {
		receives read_value
	}
	
	// Pump port
	required port pump {
		sends pump_ON, pump_OFF 
	}
	
	property sbcb: UInt8 = 0
	property sacb: UInt8 = 0
	property sbca: UInt8 = 0
	property saca: UInt8 = 0
	property sensorUpdated: Boolean = false
	property pumpIsOn : Boolean = false
	
	function updatePump() : Boolean do
		var isOn : Boolean = pumpIsOn
		if (not isOn) do
			if(sbcb == 1 and sacb == 1 and saca == 0) do
				isOn = true
			end
			else do 
				isOn = false
			end
		end
		else do 
			if (sbcb == 1 and saca == 0)
				isOn = true
			else isOn = false
		end
		
		return isOn
	end
	
	statechart PumpSystem init LISTENING {		
		state LISTENING {
			
			internal event e: sbcb?read_value action do
				sbcb = e.val
				sensorUpdated = true
			end
			internal event e: sacb?read_value action do
				sacb = e.val
				sensorUpdated = true
			end
			internal event e: sbca?read_value action do
				sbca = e.val
				sensorUpdated = true
			end
			internal event e: saca?read_value action do
				saca = e.val
				sensorUpdated = true
			end
			
			/*internal event clock?ms1000_tic action do 
            			pumpIsOn = updatePump()
				if(pumpIsOn)
            				pump!pump_ON()
            			else
            				pump!pump_OFF()
            		end*/
			
			transition -> UPDATING
			guard (sensorUpdated)
			
		}
		
		state UPDATING {
			on entry do
				pumpIsOn = updatePump()
				if(pumpIsOn)
    					pump!pump_ON()
            			else
            				pump!pump_OFF()
            			sensorUpdated = false
			end
			transition -> LISTENING
		}
	}
}

protocol Timer;

configuration PumpSystem {
	
	instance pumpSystem : PumpSystem

	instance pump : Pump
	instance sbcb : Sensor
		set sbcb.PIN = 7
	instance sacb : Sensor 
		set sacb.PIN = 8
	instance sbca : Sensor 
		set sbca.PIN = 9
	instance saca : Sensor 
		set saca.PIN = 10
	
	connector pumpSystem.sbcb => sbcb.ctrl
	connector pumpSystem.sacb => sacb.ctrl
	connector pumpSystem.sbca => sbca.ctrl
	connector pumpSystem.saca => saca.ctrl
	connector pumpSystem.pump => pump.notify
	//connector pumpSystem.clock over Timer
	connector sbcb.clock over Timer
	connector sacb.clock over Timer
	connector sbca.clock over Timer
	connector saca.clock over Timer
}
