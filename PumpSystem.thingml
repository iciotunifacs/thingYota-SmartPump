import "Sensor.thingml"
import "Pump.thingml"
import "_Datatypes.thingml"

/* AVISO:
* ESSE ARQUIVO É UM ESBOÇO, ELE NÃO É FUNCIONAL NO MOMENTO E NÃO DEVE SER UTILIZADO.
* THIS FILE IS A DRAFT, IT IS NOT CURRENTLY FUNCTIONAL AND SHOULD NOT BE USED.
*/

thing PumpSystem includes TimerMsgs, SensorMsgs, PumpMsgs { 
	// Sensor ports
	required port sbcb {
		receives sensor_ON, sensor_OFF
	}
	
	required port sbca {
		receives sensor_ON, sensor_OFF
	}
	
	required port sacb {
		receives sensor_ON, sensor_OFF
	}
	
	required port saca {
		receives sensor_ON, sensor_OFF
	}
	
	// Pump port
	required port pump {
		sends pump_ON, pump_OFF 
	}
	
	statechart PumpSystem init OFF {
		state OFF {
			on entry do
				pump!pump_OFF()
			end
			transition -> ON event e : sbcb?sensor_ON
		}
		
		state ON {
			on entry do
				pump!pump_ON()
			end
			transition -> OFF event e : sbcb?sensor_ON
		}
	}
}

protocol Timer;

configuration PumpSystem {
	
	instance pumpSystem : PumpSystem
	instance pump : Pump
	instance sbcb : Sensor
		set sbcb.PIN = 7
	instance sacb : Sensor 
		set sacb.PIN = 8
	instance sbca : Sensor 
		set sbca.PIN = 9
	instance saca : Sensor 
		set saca.PIN = 10
	
	connector pumpSystem.sbcb => sbcb.ctrl
	connector pumpSystem.sacb => sacb.ctrl
	connector pumpSystem.sbca => sbca.ctrl
	connector pumpSystem.saca => saca.ctrl
	connector pumpSystem.pump => pump.notify
	connector sbcb.clock over Timer
	connector sacb.clock over Timer
	connector sbca.clock over Timer
	connector saca.clock over Timer
}
